In file included from /usr/include/c++/5/random:35:0,
                 from living.hpp:17,
                 from block.hpp:16,
                 from grid.hpp:12,
                 from game.hpp:16,
                 from game.cpp:9:
/usr/include/c++/5/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler options.
 #error This file requires compiler and library support \
  ^
In file included from game.hpp:16:0,
                 from game.cpp:9:
grid.hpp:38:33: error: ‘>>’ should be ‘> >’ within a nested template argument list
     vector<vector<class Textbox*>> textbox;
                                 ^
grid.hpp: In constructor ‘Map::Map()’:
grid.hpp:63:41: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
         HorizontalBlock1 =  new Textbox({"+------"}, "Build");
                                         ^
grid.hpp:63:61: error: no matching function for call to ‘Textbox::Textbox(<brace-enclosed initializer list>, const char [6])’
         HorizontalBlock1 =  new Textbox({"+------"}, "Build");
                                                             ^
grid.hpp:30:5: note: candidate: Textbox::Textbox(std::vector<std::__cxx11::basic_string<char> >, std::__cxx11::string)
     Textbox(vector<string>, string srt = "Default");
     ^
grid.hpp:30:5: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::__cxx11::basic_string<char> >’
grid.hpp:22:7: note: candidate: Textbox::Textbox(const Textbox&)
 class Textbox
       ^
grid.hpp:22:7: note:   candidate expects 1 argument, 2 provided
grid.hpp:64:41: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
         HorizontalBlock2 =  new Textbox({"-------"}, "Build");
                                         ^
grid.hpp:64:61: error: no matching function for call to ‘Textbox::Textbox(<brace-enclosed initializer list>, const char [6])’
         HorizontalBlock2 =  new Textbox({"-------"}, "Build");
                                                             ^
grid.hpp:30:5: note: candidate: Textbox::Textbox(std::vector<std::__cxx11::basic_string<char> >, std::__cxx11::string)
     Textbox(vector<string>, string srt = "Default");
     ^
grid.hpp:30:5: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::__cxx11::basic_string<char> >’
grid.hpp:22:7: note: candidate: Textbox::Textbox(const Textbox&)
 class Textbox
       ^
grid.hpp:22:7: note:   candidate expects 1 argument, 2 provided
grid.hpp:65:41: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
         HorizontalBlock3 =  new Textbox({"-------+"}, "Build");
                                         ^
grid.hpp:65:62: error: no matching function for call to ‘Textbox::Textbox(<brace-enclosed initializer list>, const char [6])’
         HorizontalBlock3 =  new Textbox({"-------+"}, "Build");
                                                              ^
grid.hpp:30:5: note: candidate: Textbox::Textbox(std::vector<std::__cxx11::basic_string<char> >, std::__cxx11::string)
     Textbox(vector<string>, string srt = "Default");
     ^
grid.hpp:30:5: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::__cxx11::basic_string<char> >’
grid.hpp:22:7: note: candidate: Textbox::Textbox(const Textbox&)
 class Textbox
       ^
grid.hpp:22:7: note:   candidate expects 1 argument, 2 provided
grid.hpp:66:41: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
         HorizontalBlock4 =  new Textbox({"|------"}, "Build");
                                         ^
grid.hpp:66:61: error: no matching function for call to ‘Textbox::Textbox(<brace-enclosed initializer list>, const char [6])’
         HorizontalBlock4 =  new Textbox({"|------"}, "Build");
                                                             ^
grid.hpp:30:5: note: candidate: Textbox::Textbox(std::vector<std::__cxx11::basic_string<char> >, std::__cxx11::string)
     Textbox(vector<string>, string srt = "Default");
     ^
grid.hpp:30:5: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::__cxx11::basic_string<char> >’
grid.hpp:22:7: note: candidate: Textbox::Textbox(const Textbox&)
 class Textbox
       ^
grid.hpp:22:7: note:   candidate expects 1 argument, 2 provided
grid.hpp:67:41: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
         HorizontalBlock5 =  new Textbox({"+------|"}, "Build");
                                         ^
grid.hpp:67:62: error: no matching function for call to ‘Textbox::Textbox(<brace-enclosed initializer list>, const char [6])’
         HorizontalBlock5 =  new Textbox({"+------|"}, "Build");
                                                              ^
grid.hpp:30:5: note: candidate: Textbox::Textbox(std::vector<std::__cxx11::basic_string<char> >, std::__cxx11::string)
     Textbox(vector<string>, string srt = "Default");
     ^
grid.hpp:30:5: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::__cxx11::basic_string<char> >’
grid.hpp:22:7: note: candidate: Textbox::Textbox(const Textbox&)
 class Textbox
       ^
grid.hpp:22:7: note:   candidate expects 1 argument, 2 provided
grid.hpp:68:41: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
         VerticalBlock =     new Textbox({"|", "|", "|"}, "Build");
                                         ^
grid.hpp:68:65: error: no matching function for call to ‘Textbox::Textbox(<brace-enclosed initializer list>, const char [6])’
         VerticalBlock =     new Textbox({"|", "|", "|"}, "Build");
                                                                 ^
grid.hpp:30:5: note: candidate: Textbox::Textbox(std::vector<std::__cxx11::basic_string<char> >, std::__cxx11::string)
     Textbox(vector<string>, string srt = "Default");
     ^
grid.hpp:30:5: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::__cxx11::basic_string<char> >’
grid.hpp:22:7: note: candidate: Textbox::Textbox(const Textbox&)
 class Textbox
       ^
grid.hpp:22:7: note:   candidate expects 1 argument, 2 provided
grid.hpp:69:41: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
         EmptyBlock =        new Textbox({"      ", "      ", "      "}, "Common");
                                         ^
grid.hpp:69:81: error: no matching function for call to ‘Textbox::Textbox(<brace-enclosed initializer list>, const char [7])’
         EmptyBlock =        new Textbox({"      ", "      ", "      "}, "Common");
                                                                                 ^
grid.hpp:30:5: note: candidate: Textbox::Textbox(std::vector<std::__cxx11::basic_string<char> >, std::__cxx11::string)
     Textbox(vector<string>, string srt = "Default");
     ^
grid.hpp:30:5: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::__cxx11::basic_string<char> >’
grid.hpp:22:7: note: candidate: Textbox::Textbox(const Textbox&)
 class Textbox
       ^
grid.hpp:22:7: note:   candidate expects 1 argument, 2 provided
grid.hpp:70:41: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
         MarketBlock =       new Textbox({"      ", "Market", "      "}, "Market");
                                         ^
grid.hpp:70:81: error: no matching function for call to ‘Textbox::Textbox(<brace-enclosed initializer list>, const char [7])’
         MarketBlock =       new Textbox({"      ", "Market", "      "}, "Market");
                                                                                 ^
grid.hpp:30:5: note: candidate: Textbox::Textbox(std::vector<std::__cxx11::basic_string<char> >, std::__cxx11::string)
     Textbox(vector<string>, string srt = "Default");
     ^
grid.hpp:30:5: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::__cxx11::basic_string<char> >’
grid.hpp:22:7: note: candidate: Textbox::Textbox(const Textbox&)
 class Textbox
       ^
grid.hpp:22:7: note:   candidate expects 1 argument, 2 provided
grid.hpp:71:41: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
         MarketBlockWTHeros =new Textbox({"xHeros", "~~IN~~", "Market"}, "MarketWHeros");
                                         ^
grid.hpp:71:87: error: no matching function for call to ‘Textbox::Textbox(<brace-enclosed initializer list>, const char [13])’
         MarketBlockWTHeros =new Textbox({"xHeros", "~~IN~~", "Market"}, "MarketWHeros");
                                                                                       ^
grid.hpp:30:5: note: candidate: Textbox::Textbox(std::vector<std::__cxx11::basic_string<char> >, std::__cxx11::string)
     Textbox(vector<string>, string srt = "Default");
     ^
grid.hpp:30:5: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::__cxx11::basic_string<char> >’
grid.hpp:22:7: note: candidate: Textbox::Textbox(const Textbox&)
 class Textbox
       ^
grid.hpp:22:7: note:   candidate expects 1 argument, 2 provided
grid.hpp:72:41: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
         NonAccessibleBlock =new Textbox({"XXXXXX", "XXXXXX", "XXXXXX"}, "NonAccessible");
                                         ^
grid.hpp:72:88: error: no matching function for call to ‘Textbox::Textbox(<brace-enclosed initializer list>, const char [14])’
         NonAccessibleBlock =new Textbox({"XXXXXX", "XXXXXX", "XXXXXX"}, "NonAccessible");
                                                                                        ^
grid.hpp:30:5: note: candidate: Textbox::Textbox(std::vector<std::__cxx11::basic_string<char> >, std::__cxx11::string)
     Textbox(vector<string>, string srt = "Default");
     ^
grid.hpp:30:5: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::__cxx11::basic_string<char> >’
grid.hpp:22:7: note: candidate: Textbox::Textbox(const Textbox&)
 class Textbox
       ^
grid.hpp:22:7: note:   candidate expects 1 argument, 2 provided
grid.hpp:73:41: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
         Space =             new Textbox({" "}, "Space");
                                         ^
grid.hpp:73:55: error: no matching function for call to ‘Textbox::Textbox(<brace-enclosed initializer list>, const char [6])’
         Space =             new Textbox({" "}, "Space");
                                                       ^
grid.hpp:30:5: note: candidate: Textbox::Textbox(std::vector<std::__cxx11::basic_string<char> >, std::__cxx11::string)
     Textbox(vector<string>, string srt = "Default");
     ^
grid.hpp:30:5: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::__cxx11::basic_string<char> >’
grid.hpp:22:7: note: candidate: Textbox::Textbox(const Textbox&)
 class Textbox
       ^
grid.hpp:22:7: note:   candidate expects 1 argument, 2 provided
grid.hpp:74:41: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
         TripleSpace =       new Textbox({" ", " ", " "}, "Space");
                                         ^
grid.hpp:74:65: error: no matching function for call to ‘Textbox::Textbox(<brace-enclosed initializer list>, const char [6])’
         TripleSpace =       new Textbox({" ", " ", " "}, "Space");
                                                                 ^
grid.hpp:30:5: note: candidate: Textbox::Textbox(std::vector<std::__cxx11::basic_string<char> >, std::__cxx11::string)
     Textbox(vector<string>, string srt = "Default");
     ^
grid.hpp:30:5: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::__cxx11::basic_string<char> >’
grid.hpp:22:7: note: candidate: Textbox::Textbox(const Textbox&)
 class Textbox
       ^
grid.hpp:22:7: note:   candidate expects 1 argument, 2 provided
grid.hpp:75:41: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
         Newline =           new Textbox({"\n"}, "Newline");
                                         ^
grid.hpp:75:58: error: no matching function for call to ‘Textbox::Textbox(<brace-enclosed initializer list>, const char [8])’
         Newline =           new Textbox({"\n"}, "Newline");
                                                          ^
grid.hpp:30:5: note: candidate: Textbox::Textbox(std::vector<std::__cxx11::basic_string<char> >, std::__cxx11::string)
     Textbox(vector<string>, string srt = "Default");
     ^
grid.hpp:30:5: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<std::__cxx11::basic_string<char> >’
grid.hpp:22:7: note: candidate: Textbox::Textbox(const Textbox&)
 class Textbox
       ^
grid.hpp:22:7: note:   candidate expects 1 argument, 2 provided
In file included from game.hpp:19:0,
                 from game.cpp:9:
item.h: At global scope:
item.h:6:7: error: redefinition of ‘class Item’
 class Item
       ^
In file included from living.hpp:18:0,
                 from block.hpp:16,
                 from grid.hpp:12,
                 from game.hpp:16,
                 from game.cpp:9:
item.h:6:7: error: previous definition of ‘class Item’
 class Item
       ^
In file included from game.hpp:19:0,
                 from game.cpp:9:
item.h:20:7: error: redefinition of ‘class Weapon’
 class Weapon : public Item
       ^
In file included from living.hpp:18:0,
                 from block.hpp:16,
                 from grid.hpp:12,
                 from game.hpp:16,
                 from game.cpp:9:
item.h:20:7: error: previous definition of ‘class Weapon’
 class Weapon : public Item
       ^
In file included from game.hpp:19:0,
                 from game.cpp:9:
item.h:32:7: error: redefinition of ‘class Armor’
 class Armor : public Item
       ^
In file included from living.hpp:18:0,
                 from block.hpp:16,
                 from grid.hpp:12,
                 from game.hpp:16,
                 from game.cpp:9:
item.h:32:7: error: previous definition of ‘class Armor’
 class Armor : public Item
       ^
In file included from game.hpp:19:0,
                 from game.cpp:9:
item.h:43:7: error: redefinition of ‘class Potion’
 class Potion : public Item
       ^
In file included from living.hpp:18:0,
                 from block.hpp:16,
                 from grid.hpp:12,
                 from game.hpp:16,
                 from game.cpp:9:
item.h:43:7: error: previous definition of ‘class Potion’
 class Potion : public Item
       ^
game.cpp: In member function ‘Monster* Game::randMonster(Hero*)’:
game.cpp:136:24: error: ‘rand’ was not declared in this scope
     int montype = rand() % 3 + 1;
                        ^
game.cpp: In member function ‘void Game::surprise(std::vector<Hero*>)’:
game.cpp:211:15: error: ‘exit’ was not declared in this scope
         exit(1);
               ^
game.cpp: In member function ‘void Game::move_heros(std::__cxx11::string)’:
game.cpp:271:27: error: ‘rand’ was not declared in this scope
         int chance = rand() % 100 + 1;
                           ^
game.cpp: In member function ‘void Game::showHerosExpanded()’:
game.cpp:332:15: error: ‘hero’ does not name a type
     for (auto hero : theHeros) {
               ^
game.cpp:480:5: error: expected ‘;’ before ‘mymap’
     mymap.show();
     ^
game.cpp:480:15: error: could not convert ‘mymap.Map::show()’ from ‘void’ to ‘bool’
     mymap.show();
               ^
game.cpp:482:1: error: expected primary-expression before ‘}’ token
 }
 ^
game.cpp:482:1: error: expected ‘)’ before ‘}’ token
game.cpp:482:1: error: expected primary-expression before ‘}’ token
game.cpp: In member function ‘void Game::printweparray()’:
game.cpp:540:24: error: ‘get_weparray’ was not declared in this scope
     int k=get_weparray().size();
                        ^
game.cpp: In member function ‘void Game::printarmarray()’:
game.cpp:547:11: error: ‘get_armarray’ was not declared in this scope
     int k=get_armarray.size();
           ^
game.cpp: In member function ‘void Game::printpotarray()’:
game.cpp:554:11: error: ‘get_potarray’ was not declared in this scope
     int k=get_potarray.size();
           ^
